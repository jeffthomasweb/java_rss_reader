/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package Readxml;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.Node;
import org.w3c.dom.NodeList;
import org.xml.sax.SAXException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;

import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import java.net.*;
import java.net.http.*;
import java.io.*;
import java.util.*;

import org.xml.sax.InputSource;
public class App {
	
    private static final String FILENAME = "/home/jeff/jprojects/xml.txt";
    public static void main(String[] args) throws Exception {
	HttpClient myhc = HttpClient.newHttpClient();
	HttpRequest myreq = HttpRequest.newBuilder(new URI("https://feeds.npr.org/1001/rss.xml")).build();
	HttpResponse<String> myresp = myhc.send(myreq, HttpResponse.BodyHandlers.ofString());
	String resp = myresp.body();        
	List<String> results = new ArrayList<String>();
        // Instantiate the Factory
        DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();

        try {

          // parse XML file
		DocumentBuilder db = dbf.newDocumentBuilder();
		Document doc = db.parse(new InputSource(new StringReader(resp)));
		//Document doc = db.parse(resp);
          	//Document doc = db.parse(new File(FILENAME));

          // optional, but recommended
          // http://stackoverflow.com/questions/13786607/normalization-in-dom-parsing-with-java-how-does-it-work
          	doc.getDocumentElement().normalize();

          	System.out.println("Root Element :" + doc.getDocumentElement().getNodeName());
          	System.out.println("------");

          // get <staff>
          	NodeList list = doc.getElementsByTagName("item");

          	for (int temp = 0; temp < list.getLength(); temp++) {

              		Node node = list.item(temp);

              		if (node.getNodeType() == Node.ELEMENT_NODE) {

                  		Element element = (Element) node;

                  // get text
                  		String title = element.getElementsByTagName("title").item(0).getTextContent();
                  		results.add(title);
				String description = element.getElementsByTagName("description").item(0).getTextContent();
				results.add(description);

                  		//System.out.println("Current Element :" + node.getNodeName());
                  		System.out.println("title : " + title);
                  		System.out.println("description : " + description);

			}
			
			}
		//System.out.println(results);
	} catch (ParserConfigurationException | SAXException | IOException e) {
          e.printStackTrace();
      }

  }
	}

